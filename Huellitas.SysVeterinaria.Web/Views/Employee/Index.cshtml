@* Referencia al Modelo a utilizar *@
@model IEnumerable<Huellitas.SysVeterinaria.EN.Employee_EN.Employee>

@{
    // Titulo de la Pestaña
    ViewData["Title"] = "Empleados";
    int numPage = 1; // Paginacion
    int numRegistros = 0; // reset de la paginacion
    int numRegistrosPorPage = 10; //Dato a mostrar en la paginacion
    int[] tops = { 10, 20, 50, -1 }; // para que el user eliga cuantos registros quiere mostrar
    int topActual = Convert.ToInt32(ViewBag.Top); //controla cuanto registros ha seleccionado el usario
}
<br />
<br />
<br />
<h1>Mantenimiento Para Empleados</h1>
<div class="row">
    <div class="col-md-12">
        <form asp-action="Index">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="control-label">Nombre</label>
                        <input type="text" class="form-control" name="Name" />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="control-label">Dui</label>
                        <input type="text" class="form-control" id="inputDui" name="Dui" />
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="control-label">Top</label>
                        <select name="Top_Aux" class="form-control">
                            @foreach (var item in tops)
                            {
                                string strItem = item != -1 ? item.ToString() : "Todos";
                                if (item != topActual)
                                {
                                    <option value="@item">@strItem</option>
                                }
                                else
                                {
                                    <option selected value="@item">@strItem</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>
            <br />
            <div class="col-md-4 m-2">
                <input type="submit" value="Buscar Empleado" class="btn btn-outline-info" /> &nbsp;&nbsp;
                <a asp-action="Create" class="btn btn-outline-primary">Nuevo Empleado</a>
            </div>
        </form>
    </div>
</div>
<br />
<h2>Tabla de Resultados</h2>
<table class="table table-responsive table-striped paginationjs">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Dui)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Position)
            </th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-page="@numPage">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Dui)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Position)
                </td>
                <td>
                    @Html.ActionLink("Modificar", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-info" }) |
                    @Html.ActionLink("Detalles", "Details", new { id = item.Id }, new { @class = "btn btn-outline-secondary" }) |
                    @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger" })
                </td>
            </tr>
            numRegistros++;
            if (numRegistros == numRegistrosPorPage)
            {
                numPage++;
                numRegistros = 0;
            }
        }
        @{
            if (numRegistros == 0)
            {
                numPage--;
            }
        }
    </tbody>
</table>

@if (numPage > 1)
{
    <div class="row" style="overflow:auto">
        <div class="col-md-12">
            <ul class="pagination paginationjs" data-numpage="@numPage" data-pageactive="1">
                <li class="page-item" data-typepage="Previous"><a class="page-link" href="#">Anterior</a></li>
                @for (var i = 1; i <= numPage; i++)
                {
                    <li class="page-item" data-page="@i" data-typepage="Item"><a class="page-link" href="#">@i</a></li>
                }
                <li class="page-item" data-typepage="Next"><a class="page-link" href="#">Siguiente</a></li>
            </ul>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.getElementById('inputDui').addEventListener('input', function (event) {
            var inputValue = event.target.value;
            var formattedValue = formatDui(inputValue);
            event.target.value = formattedValue;
        });

        function formatDui(inputValue) {
            inputValue = inputValue.replace(/\D/g, ''); // Remover todos los caracteres que no sean dígitos
            var formattedValue = '';
            for (var i = 0; i < inputValue.length; i++) {
                if (i == 8) {
                    formattedValue += '-' + inputValue.charAt(i);
                } else {
                    formattedValue += inputValue.charAt(i);
                }
            }
            return formattedValue;
        }
    </script>
}